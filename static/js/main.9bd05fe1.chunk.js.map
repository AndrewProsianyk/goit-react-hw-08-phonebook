{"version":3,"sources":["redux/auth/auth-operations.js","redux/auth/auth-selectors.js","UserMenu/UserMenu.js","AuthNav/AuthNav.js","AppBar/AppBar.js","PublicRoute.js","PrivateRoute.js","App.js","redux/reducer.js","redux/auth/auth-slice.js","redux/store.js","index.js","redux/actions.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","alert","logIn","operations","logOut","loadUser","_","thunkAPI","state","getState","persistedToken","auth","rejectWithValue","get","authSelectors","getIsLoggedIn","isLoggedIn","getUsername","user","name","getIsFetchingCurrent","isLoadingUser","UserMenu","dispatch","useDispatch","useSelector","src","alt","type","onClick","AuthNav","to","exact","AppBar","PublicRoute","children","restricted","redirectTo","routeProps","shouldRedirect","PrivateRoute","HomeView","lazy","RegistrationView","LoginView","ContactsView","connect","useEffect","authOperations","fallback","path","contacts","createReducer","addContactSuccess","payload","deleteContactSuccess","filter","id","fetchContactSuccess","changeFilter","loading","addContactRequest","addContactError","deleteContactRequest","deleteContactError","fetchContactRequest","fetchContactError","error","combineReducers","authSlice","createSlice","initialState","email","extraReducers","fulfilled","action","pending","rejected","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById","createAction"],"mappings":"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","file":"static/js/main.9bd05fe1.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = createAsyncThunk('auth/register', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/signup', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    alert(error);\r\n  }\r\n});\r\n\r\nconst logIn = createAsyncThunk('auth/login', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/login', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    alert(error);\r\n  }\r\n});\r\n\r\nconst logOut = createAsyncThunk('auth/logout', async () => {\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n  } catch (error) {\r\n      alert(error);\r\n  }\r\n});\r\n\r\nconst loadUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      // console.log('Токена нет, уходим из fetchCurrentUser');\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get('/users/current');\r\n      return data;\r\n    } catch (error) {\r\n        alert(error);\r\n    }\r\n  },\r\n);\r\n\r\nconst operations = {\r\n  register,\r\n  logOut,\r\n  logIn,\r\n  loadUser,\r\n};\r\nexport default operations;","const getIsLoggedIn = state => state.auth.isLoggedIn;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\nconst getIsFetchingCurrent = state => state.auth.isLoadingUser;\r\n\r\nconst authSelectors = {\r\n  getIsLoggedIn,\r\n  getUsername,\r\n  getIsFetchingCurrent,\r\n};\r\nexport default authSelectors;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\nimport operations from '../redux/auth/auth-operations'\r\n\r\nexport default function UserMenu() {\r\n    const dispatch = useDispatch();\r\n    const name = useSelector(authSelectors.getUsername)\r\n\r\n    return (\r\n        <div>\r\n            <img src=\"\" alt=\"\" />\r\n            <span>Hello, {name}</span>\r\n            <button\r\n                type=\"button\"\r\n                onClick={()=>dispatch(operations.logOut())}\r\n            >Logout</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default function AuthNav () {\r\n    return (\r\n        <div>\r\n            <NavLink\r\n                to=\"/register\"\r\n                exact\r\n            // style={styles.link}\r\n            // activeStyle={styles.activeLink}\r\n            >\r\n                Регистрация\r\n            </NavLink>\r\n            <NavLink\r\n                to=\"/login\"\r\n                exact\r\n            // style={styles.link}\r\n            // activeStyle={styles.activeLink}\r\n            >\r\n                Логин\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport AuthNav from '../AuthNav/AuthNav';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function AppBar() {\r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn)\r\n    return (\r\n        <header>\r\n            {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n        </header>\r\n    );\r\n};","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport authSelectors from './redux/auth/auth-selectors';\r\n\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo}/> : children}\r\n    </Route>\r\n  );\r\n}","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport authSelectors from './redux/auth/auth-selectors';\r\n\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n       {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}","import { useEffect, Suspense, lazy } from 'react';\n// import shortid from 'shortid';\nimport { connect, useDispatch,useSelector } from 'react-redux';\nimport AppBar from './AppBar/AppBar'\nimport { Switch, Redirect } from 'react-router';\nimport PublicRoute from './PublicRoute';\nimport PrivateRoute from './PrivateRoute';\nimport authSelectors from './redux/auth/auth-selectors';\nimport authOperations from '../src/redux/auth/auth-operations';\n\nconst HomeView = lazy(() => import('./Views/HomeView'));\nconst RegistrationView = lazy(() => import('./Views/RegistrationView'));\nconst LoginView = lazy(() => import('./Views/LoginView'));\nconst ContactsView = lazy(() => import('./Views/ContactsView'));\n\nfunction App() {\n  const dispatch = useDispatch();\n  const isLoadingUser = useSelector(authSelectors.getIsFetchingCurrent);\n\n  useEffect(() => {\n    dispatch(authOperations.loadUser());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoadingUser ? (\n        <h1>Loading...</h1>\n      ) : (\n        <div>\n          <AppBar />\n\n          <Switch>\n            <Suspense fallback={<p>LOADING</p>}>\n              <PublicRoute exact path=\"/\">\n                <HomeView />\n              </PublicRoute>\n              <PublicRoute exact path=\"/register\" redirectTo=\"/contacts\" restricted>\n                <RegistrationView />\n              </PublicRoute>\n              <PublicRoute exact path=\"/login\" redirectTo=\"/contacts\" restricted>\n                <LoginView />\n              </PublicRoute>\n\n              <PrivateRoute exact path=\"/contacts\" redirectTo=\"/login\">\n                <ContactsView/>\n              </PrivateRoute>\n              <PublicRoute>\n                <Redirect to=\"/\" />\n              </PublicRoute>\n            </Suspense>\n          </Switch>\n        </div>\n      )}\n      </>\n  );\n};\n\nexport default connect()(App);\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n    addContactSuccess,\r\n    addContactRequest, \r\n    addContactError, \r\n    deleteContactSuccess, \r\n    deleteContactRequest,\r\n    deleteContactError,\r\n    fetchContactSuccess,\r\n    fetchContactRequest,\r\n    fetchContactError,\r\n    changeFilter\r\n} from \"./actions\";\r\n\r\n\r\n\r\nconst contacts = createReducer([], {\r\n    [addContactSuccess]: (state, {payload}) => [...state, payload],\r\n    [deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n    [fetchContactSuccess]: (_, {payload}) => payload\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_, {payload}) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n    [addContactSuccess]: () => false,\r\n    [addContactRequest]: () => true,\r\n    [addContactError]: () => false,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactError]: () => false,\r\n    [fetchContactSuccess]: () => false,\r\n    [fetchContactRequest]: () => true,\r\n    [fetchContactError]: () => false\r\n});\r\n\r\nconst error = createReducer(null, {})\r\n\r\nexport default combineReducers({\r\n    contacts,\r\n    filter,\r\n    loading,\r\n    error,\r\n});","import { createSlice } from '@reduxjs/toolkit';\r\nimport authOperations from './auth-operations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isLoadingUser: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logOut.fulfilled](state) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    [authOperations.loadUser.pending](state) {\r\n      state.isLoadingUser = true;\r\n    },\r\n    [authOperations.loadUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n      state.isLoadingUser = false;\r\n    },\r\n    [authOperations.loadUser.rejected](state) {\r\n      state.isLoadingUser = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;","import contactReducer from './reducer';\r\nimport authReducer from './auth/auth-slice';\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n    REHYDRATE\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        auth: persistReducer(authPersistConfig, authReducer),\r\n        contacts: contactReducer,\r\n    },\r\n    devTools: process.env.NODE_ENV === 'development',\r\n    middleware: [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n]\r\n})\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport {store, persistor}  from './redux/store';\nimport { Provider } from 'react-redux';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","import { createAction } from \"@reduxjs/toolkit\"\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n"],"sourceRoot":""}