{"version":3,"sources":["Views/View.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","ContactForm/ContactForm.module.css","Filter/Filter.module.css","ContactList/ContactList.module.css","redux/selectors.js","ContactForm/ContactForm.js","redux/operations.js","Filter/Filter.js","ContactList/ContactList.js","Views/ContactsView.js"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","getContacts","state","contacts","getFilter","filter","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","ContactForm","dispatch","useDispatch","useSelector","useState","setName","number","setNumber","inputChange","e","currentTarget","className","styles","form","onSubmit","preventDefault","map","alert","a","addContactRequest","axios","post","data","addContactSuccess","addContactError","addContact","label","input","type","pattern","title","required","onChange","button","Filter","changeFilter","ContactList","useEffect","fetchContactRequest","get","fetchContactSuccess","fetchContactError","contactList","listItem","onClick","contactId","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","noContactsText","ContactsView","container","contactsTitle"],"mappings":"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","file":"static/js/3.f0344634.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"View_title__-B0eL\",\"container\":\"View_container__3EtGa\",\"form\":\"View_form__KqsOd\",\"input\":\"View_input__vZdIH\",\"label\":\"View_label__264Xf\",\"labelSpan\":\"View_labelSpan__1V7yn\",\"formButton\":\"View_formButton__3gsl2\",\"contactsTitle\":\"View_contactsTitle__1F5nI\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3_AEl\",\"input\":\"ContactForm_input__1Veq1\",\"button\":\"ContactForm_button__2O9ui\",\"label\":\"ContactForm_label__3p_fc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3hZKG\",\"input\":\"Filter_input__3_lRP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3HpPv\",\"listItem\":\"ContactList_listItem__2hVcD\",\"button\":\"ContactList_button__3ABsz\",\"number\":\"ContactList_number__3ycXT\",\"name\":\"ContactList_name__1sUAV\",\"noContactsText\":\"ContactList_noContactsText___uJ1s\"};","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = state => state.contacts.contacts;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getError = state => state.contacts.error;\r\nexport const getIsLoading = state => state.contacts.loading;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n    [getContacts, getFilter],\r\n    (contacts, filter) => {\r\n      const normalizedFilter = filter.toLowerCase();  \r\n      return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter),\r\n      // console.log(contacts)\r\n      );\r\n    },\r\n  );","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getContacts } from '../redux/selectors';\r\nimport { addContact} from '../redux/operations';\r\nimport styles from './ContactForm.module.css';\r\n\r\nfunction ContactForm() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('')\r\n\r\n\r\n  const inputChange = e => {\r\n    switch (e.currentTarget.name) {\r\n      case 'name':\r\n        setName(e.currentTarget.value);\r\n        break;\r\n      case 'number':\r\n        setNumber(e.currentTarget.value);\r\n        break;\r\n      default:\r\n        return\r\n    }\r\n  };\r\n  const onSubmitForm = e => {\r\n    e.preventDefault();\r\n    if (contacts.map(contact => contact.name).includes(name)) {\r\n      alert(`You already have ${name} in contacs.`)\r\n    } else {\r\n      dispatch(addContact(name, number));\r\n      setName('');\r\n      setNumber('');\r\n    }\r\n  }\r\n    \r\n  return (\r\n    <form\r\n      className={styles.form}\r\n      onSubmit={onSubmitForm}\r\n    >\r\n      <label className={styles.label}><span className={styles.name}>Name</span>\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={inputChange}\r\n          value={name}\r\n        />\r\n      </label>\r\n\r\n      <label className={styles.label}><span>Number</span>\r\n        <input\r\n          className={styles.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={inputChange}\r\n\r\n        />\r\n      </label>\r\n\r\n      <button className={styles.button} type=\"submit\">Add contact</button>\r\n    </form>\r\n  )\r\n}\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n};\r\n\r\nexport default ContactForm;","import axios from 'axios';\r\nimport {\r\n    addContactSuccess,\r\n    addContactRequest, \r\n    addContactError, \r\n    deleteContactSuccess, \r\n    deleteContactRequest,\r\n    deleteContactError,\r\n    fetchContactSuccess,\r\n    fetchContactRequest,\r\n    fetchContactError\r\n} from \"./actions\";\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n    dispatch(fetchContactRequest())\r\n    try {\r\n        const { data } = await axios.get('/contacts')\r\n        dispatch(fetchContactSuccess(data))\r\n    } catch (error) {\r\n        dispatch(fetchContactError(error))\r\n    }\r\n};\r\n\r\nexport const addContact = (name, number) => async dispatch => {\r\n    const contact = {\r\n        name,\r\n        number\r\n    };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    try {\r\n        const { data } = await axios.post(`/contacts`, contact);\r\n\r\n        dispatch(addContactSuccess(data));\r\n    } catch (error) {\r\n        dispatch(addContactError(error));\r\n    }\r\n};\r\n\r\nexport const deleteContact = contactId => async dispatch => {\r\n    dispatch(deleteContactRequest());\r\n\r\n    try {\r\n        await axios.delete(`/contacts/${contactId}`);\r\n        dispatch(deleteContactSuccess(contactId));\r\n    } catch (error) {\r\n        dispatch(deleteContactError(error));\r\n    }\r\n};","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeFilter } from '../redux/actions';\r\nimport { getFilter } from '../redux/selectors';\r\nimport styles from './Filter.module.css'\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const value = useSelector(getFilter)\r\n  const onChange = e => dispatch(changeFilter(e.currentTarget.value));\r\n  \r\n  return (\r\n    <label className={styles.label}>\r\n      <span>Let's find somebody</span>\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        onChange={onChange}\r\n        value={value}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;","import React, {useEffect} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContact, fetchContacts } from '../redux/operations';\r\nimport { getFilteredContacts } from '../redux/selectors';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = () => {\r\n    const dispatch = useDispatch()\r\n     useEffect(() => {\r\n        dispatch(fetchContacts());\r\n    }, [dispatch]);\r\n    const contactList = useSelector(getFilteredContacts);\r\n\r\n    if (contactList.length > 0) {\r\n        return (\r\n            <div>\r\n                <ul className={styles.contactList}>\r\n                    {contactList.map(contact => (\r\n                        <li\r\n                            className={styles.listItem}\r\n                            key={contact.id}>\r\n                            <span className={styles.name}>{contact.name}:</span>\r\n                            <span className={styles.number}>{contact.number}</span>\r\n                            <button\r\n                                className={styles.button}\r\n                                onClick={() => dispatch(deleteContact(contact.id))}>х</button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <p className={styles.noContactsText}>No contacts yet.</p>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nContactList.propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n}\r\n\r\nexport default ContactList;","import ContactForm from '../ContactForm/ContactForm';\r\nimport Filter from '../Filter/Filter';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport styles from './View.module.css'\r\n\r\nexport default function ContactsView() {\r\n    \r\n    return (\r\n        <div className={styles.container}>\r\n            <h1 className={styles.contactsTitle}>Phonebook</h1>\r\n            <ContactForm />\r\n            <h2 className={styles.contactsTitle}>Contacts</h2>\r\n            <Filter />\r\n            <ContactList />\r\n        </div>\r\n    );\r\n}"],"sourceRoot":""}