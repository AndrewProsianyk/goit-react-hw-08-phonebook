{"version":3,"sources":["Filter/Filter.module.css","redux/selectors.js","redux/actions.js","redux/operations.js","ContactForm/ContactForm.js","Filter/Filter.js","ContactList/ContactList.js","App.js","redux/reducer.js","redux/store.js","index.js","ContactForm/ContactForm.module.css","ContactList/ContactList.module.css"],"names":["module","exports","getContacts","state","contacts","getFilter","filter","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","ContactForm","dispatch","useDispatch","useSelector","useState","setName","number","setNumber","inputChange","e","currentTarget","value","className","styles","form","onSubmit","preventDefault","map","alert","post","then","data","catch","error","addContact","label","input","type","pattern","title","required","onChange","button","Filter","ContactList","useEffect","get","contactList","length","listItem","onClick","contactId","id","delete","connect","createReducer","payload","_","loading","combineReducers","store","configureStore","reducer","contactReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fcdcd97e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3hZKG\",\"input\":\"Filter_input__3_lRP\"};","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = state => state.contacts.contacts;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getError = state => state.contacts.error;\r\nexport const getIsLoading = state => state.contacts.loading;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n    [getContacts, getFilter],\r\n    (contacts, filter) => {\r\n      const normalizedFilter = filter.toLowerCase();  \r\n      return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter),\r\n      // console.log(contacts)\r\n      );\r\n    },\r\n  );","import { createAction } from \"@reduxjs/toolkit\"\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import axios from 'axios';\r\nimport {\r\n    addContactSuccess,\r\n    addContactRequest, \r\n    addContactError, \r\n    deleteContactSuccess, \r\n    deleteContactRequest,\r\n    deleteContactError,\r\n    fetchContactSuccess,\r\n    fetchContactRequest,\r\n    fetchContactError\r\n} from \"./actions\";\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n    dispatch(fetchContactRequest())\r\n    axios\r\n        .get('/contacts')\r\n        .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n        .catch(error => dispatch(fetchContactError(error)));\r\n};\r\n\r\nexport const addContact = ( name, number ) => dispatch => {\r\n    const contact = {\r\n        name,\r\n        number\r\n    };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n        .post('/contacts', contact)\r\n        .then(({ data }) => dispatch(addContactSuccess(data)))\r\n        .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = contactId => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n\r\n    axios\r\n        .delete(`/contacts/${contactId}`)\r\n        .then(() => dispatch(deleteContactSuccess(contactId)))\r\n        .catch(error => dispatch(deleteContactError(error)));\r\n};","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getContacts } from '../redux/selectors';\r\nimport { addContact, fetchContacts } from '../redux/operations';\r\nimport styles from './ContactForm.module.css';\r\n\r\nfunction ContactForm() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('')\r\n\r\n\r\n  const inputChange = e => {\r\n    switch (e.currentTarget.name) {\r\n      case 'name':\r\n        setName(e.currentTarget.value);\r\n        break;\r\n      case 'number':\r\n        setNumber(e.currentTarget.value);\r\n        break;\r\n      default:\r\n        return\r\n    }\r\n  };\r\n  const onSubmitForm = e => {\r\n    e.preventDefault();\r\n    if (contacts.map(contact => contact.name).includes(name)) {\r\n      alert(`You already have ${name} in contacs.`)\r\n    } else {\r\n      dispatch(addContact(name, number));\r\n      setName('');\r\n      setNumber('');\r\n    }\r\n  }\r\n    \r\n  return (\r\n    <form\r\n      className={styles.form}\r\n      onSubmit={onSubmitForm}\r\n    >\r\n      <label className={styles.label}><span className={styles.name}>Name</span>\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={inputChange}\r\n          value={name}\r\n        />\r\n      </label>\r\n\r\n      <label className={styles.label}><span>Number</span>\r\n        <input\r\n          className={styles.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={inputChange}\r\n\r\n        />\r\n      </label>\r\n\r\n      <button className={styles.button} type=\"submit\">Add contact</button>\r\n    </form>\r\n  )\r\n}\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n};\r\n\r\nexport default ContactForm;","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeFilter } from '../redux/actions';\r\nimport { getFilter } from '../redux/selectors';\r\nimport styles from './Filter.module.css'\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const value = useSelector(getFilter)\r\n  const onChange = e => dispatch(changeFilter(e.currentTarget.value));\r\n  \r\n  return (\r\n    <label className={styles.label}>\r\n      <span>Let's find somebody</span>\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        onChange={onChange}\r\n        value={value}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;","import React, {useEffect} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContact, fetchContacts } from '../redux/operations';\r\nimport { getFilteredContacts } from '../redux/selectors';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = () => {\r\n    const dispatch = useDispatch()\r\n     useEffect(() => {\r\n        dispatch(fetchContacts());\r\n    }, [dispatch]);\r\n    const contactList = useSelector(getFilteredContacts);\r\n\r\n    if (contactList.length > 0) {\r\n        return (\r\n            <div>\r\n                <ul className={styles.contactList}>\r\n                    {contactList.map(contact => (\r\n                        <li\r\n                            className={styles.listItem}\r\n                            key={contact.id}>\r\n                            <span className={styles.name}>{contact.name}:</span>\r\n                            <span className={styles.number}>{contact.number}</span>\r\n                            <button\r\n                                className={styles.button}\r\n                                onClick={() => dispatch(deleteContact(contact.id))}>х</button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <p>No contacts yet.</p>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nContactList.propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n}\r\n\r\nexport default ContactList;","import React from 'react';\n// import shortid from 'shortid';\nimport { connect } from 'react-redux';\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\n\n// const defaultContacts =\n//   [\n//     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' }\n//   ]\n\nfunction App() {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  )\n}\n\nexport default connect()(App);\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n    addContactSuccess,\r\n    addContactRequest, \r\n    addContactError, \r\n    deleteContactSuccess, \r\n    deleteContactRequest,\r\n    deleteContactError,\r\n    fetchContactSuccess,\r\n    fetchContactRequest,\r\n    fetchContactError,\r\n    changeFilter\r\n} from \"./actions\";\r\n\r\n\r\n\r\nconst contacts = createReducer([], {\r\n    [addContactSuccess]: (state, {payload}) => [...state, payload],\r\n    [deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n    [fetchContactSuccess]: (_, {payload}) => payload\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_, {payload}) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n    [addContactSuccess]: () => false,\r\n    [addContactRequest]: () => true,\r\n    [addContactError]: () => false,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactError]: () => false,\r\n    [fetchContactSuccess]: () => false,\r\n    [fetchContactRequest]: () => true,\r\n    [fetchContactError]: () => false\r\n});\r\n\r\nconst error = createReducer(null, {})\r\n\r\nexport default combineReducers({\r\n    contacts,\r\n    filter,\r\n    loading,\r\n    error,\r\n});","import contactReducer from './reducer'\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { FLUSH, PAUSE, PERSIST, PURGE, REGISTER, REHYDRATE } from 'redux-persist/es/constants';\r\n\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: contactReducer,\r\n    },\r\n    devTools: process.env.NODE_ENV === 'development',\r\n    middleware: [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n]\r\n})\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3_AEl\",\"input\":\"ContactForm_input__1Veq1\",\"button\":\"ContactForm_button__2O9ui\",\"label\":\"ContactForm_label__3p_fc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3HpPv\",\"listItem\":\"ContactList_listItem__2hVcD\",\"button\":\"ContactList_button__3ABsz\",\"number\":\"ContactList_number__3ycXT\",\"name\":\"ContactList_name__1sUAV\"};"],"sourceRoot":""}